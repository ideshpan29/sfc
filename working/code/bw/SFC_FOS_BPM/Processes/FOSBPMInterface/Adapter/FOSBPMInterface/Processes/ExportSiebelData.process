<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://services.bds.tibco.com/BusinessDataServices_1.2.0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx2="http://bizData.fosImpl.sfc.com/dataModel" xmlns:ns="http://api.bds.tibco.com" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions">
    <xsd:import namespace="http://bizData.fosImpl.sfc.com/dataModel" schemaLocation="/Processes/FOSBPMInterface/Adapter/FOSBPMInterface/Shared Resources/SchemaDefinitions/BPMBIZData.xsd"/>
    <wsdl:import namespace="http://services.bds.tibco.com/BusinessDataServices_1.2.0" location="/Processes/FOSBPMInterface/Adapter/FOSBPMInterface/Shared Resources/WSDL/BussinessdataService.wsdl"/>
    <pd:name>Processes/FOSBPMInterface/Adapter/FOSBPMInterface/Processes/ExportSiebelData.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="SiebelCircuitID" type="xsd:string"/>
                    <xsd:element name="ClientName" type="xsd:string"/>
                    <xsd:element name="ServiceType" type="xsd:string"/>
                    <xsd:element name="Technology" type="xsd:string"/>
                    <xsd:element name="ServiceStatus" type="xsd:string"/>
                    <xsd:element name="BuildingName" type="xsd:string"/>
                    <xsd:element name="AccountManager" type="xsd:string"/>
                    <xsd:element name="ProjectManager" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>121</pd:startX>
    <pd:startY>63</pd:startY>
    <pd:returnBindings>
        <SiebelData>
            <data>
                <xsl:value-of select="if ($ProcessStatus/status=&quot;success&quot;) then $Render-XML/xmlString&#xA;else &quot;null&quot;"/>
            </data>
        </SiebelData>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="SiebelData">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="data" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>1129</pd:endX>
    <pd:endY>61</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Query>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="queryString" type="xsd:string"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </Query>
        <ProcessStatus>
            <xsd:element name="status" type="xsd:string"/>
        </ProcessStatus>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1524047435601</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>561</pd:x>
        <pd:y>1</pd:y>
        <pd:width>270</pd:width>
        <pd:height>140</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$ReadCaseCustomerInformation/outputMessage/ns:ReadCaseResponse/caseData</pd:over>
            <pd:iterationElementSlot>Entry</pd:iterationElementSlot>
            <pd:indexSlot>index</pd:indexSlot>
            <pd:outSlot>SiebelData</pd:outSlot>
            <pd:activityOutputName>Parse XML</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Parse XML</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Parse XML</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Parse XML">
            <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
            <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
            <pd:x>691</pd:x>
            <pd:y>78</pd:y>
            <config>
                <inputStyle>text</inputStyle>
                <xsdVersion>default</xsdVersion>
                <validateOutput>true</validateOutput>
                <term ref="pfx2:Customer_InformationElement"/>
            </config>
            <pd:inputBindings>
                <xmlString>
                    <xsl:value-of select="$Entry/caseData/casePayload"/>
                </xmlString>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>241</pd:x>
        <pd:y>63</pd:y>
        <config>
            <variableName>Query</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:variable name="ClientName" select="if($Start/root/ClientName!=&quot;&quot;)&#xA;then concat(&quot;and clientName='&quot;,$Start/root/ClientName,&quot;'&quot;)&#xA;else&#xA;&quot;&quot;"/>
                <xsl:variable name="ProjectManager" select="if($Start/root/ProjectManager!=&quot;&quot;)&#xA;then concat(&quot;and projectManager='&quot;,$Start/root/ProjectManager,&quot;'&quot;)&#xA;else&#xA;&quot;&quot;"/>
                <xsl:variable name="AccountManager" select="if($Start/root/AccountManager!=&quot;&quot;)&#xA;then concat(&quot; and accountManager='&quot;,$Start/root/AccountManager,&quot;' &quot;)&#xA;else&#xA;&quot;&quot;"/>
                <xsl:variable name="BuildingName" select="if($Start/root/BuildingName!=&quot;&quot;)&#xA;then concat(&quot; and buildingName='&quot;,$Start/root/BuildingName,&quot;' &quot;)&#xA;else&#xA;&quot;&quot;"/>
                <xsl:variable name="ServiceStatus" select="if($Start/root/ServiceStatus!=&quot;&quot;)&#xA;then concat(&quot; and serviceStatus='&quot;,$Start/root/ServiceStatus,&quot;' &quot;)&#xA;else&#xA;&quot;&quot;"/>
                <xsl:variable name="Technology" select="if($Start/root/Technology!=&quot;&quot;)&#xA;then concat(&quot; and technology='&quot;,$Start/root/Technology,&quot;'&quot;)&#xA;else&#xA;&quot;&quot;"/>
                <xsl:variable name="ServiceType" select="if($Start/root/ServiceType!=&quot;&quot;)&#xA;then concat(&quot; and serviceType='&quot;,$Start/root/ServiceType,&quot;'&quot;)&#xA;else&#xA;&quot;&quot;"/>
                <xsl:variable name="SiebelCircuitiD" select="if($Start/root/SiebelCircuitID!=&quot;&quot;)&#xA;then concat(&quot; and siebelCircuitID='&quot;,$Start/root/SiebelCircuitID,&quot;'&quot;)&#xA;else&#xA;&quot;&quot;"/>
                <queryString>
                    <xsl:value-of select="substring-after(concat($ClientName,$SiebelCircuitiD,$ProjectManager,$AccountManager,$BuildingName,$ServiceStatus,$Technology,$ServiceType),&quot;and&quot;)"/>
                </queryString>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="FindCases">
        <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
        <pd:x>341</pd:x>
        <pd:y>63</pd:y>
        <config>
            <timeout>0</timeout>
            <soapAttachmentStyle>SwA</soapAttachmentStyle>
            <timeoutType>Seconds</timeoutType>
            <service>pfx:BusinessDataServices_1.2.0</service>
            <servicePort>BusinessDataServices.soap</servicePort>
            <operation>findCaseByCriteria</operation>
            <soapAction>findCaseByCriteria</soapAction>
            <endpointURL>http://%%BPM/BPMAPICall/HostName%%:%%BPM/BPMAPICall/port%%/amxbpm/BusinessDataServices</endpointURL>
            <authScheme>NONE</authScheme>
        </config>
        <pd:inputBindings>
            <inputMessage>
                <ns:FindCaseByCriteriaRequest>
                    <caseModelVersion>
                        <xsl:value-of select="2"/>
                    </caseModelVersion>
                    <caseType>
                        <xsl:value-of select="&quot;com.sfc.fosImpl.bizData.dataModel.Customer_Information&quot;"/>
                    </caseType>
                    <criteria>
                        <queryString>
                            <xsl:value-of select="$Query/root/queryString"/>
                        </queryString>
                    </criteria>
                </ns:FindCaseByCriteriaRequest>
            </inputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ReadCaseCustomerInformation">
        <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
        <pd:x>478</pd:x>
        <pd:y>63</pd:y>
        <config>
            <timeout>0</timeout>
            <soapAttachmentStyle>SwA</soapAttachmentStyle>
            <timeoutType>Seconds</timeoutType>
            <service>pfx:BusinessDataServices_1.2.0</service>
            <servicePort>BusinessDataServices.soap</servicePort>
            <operation>readCase</operation>
            <soapAction>readCase</soapAction>
            <endpointURL>http://%%BPM/BPMAPICall/HostName%%:%%BPM/BPMAPICall/port%%/amxbpm/BusinessDataServices</endpointURL>
            <authScheme>NONE</authScheme>
        </config>
        <pd:inputBindings>
            <inputMessage>
                <ns:ReadCaseRequest>
                    <xsl:for-each select="$FindCases/outputMessage/ns:FindCaseByCriteriaResponse/caseReference">
                        <caseReference>
                            <xsl:value-of select="."/>
                        </caseReference>
                    </xsl:for-each>
                </ns:ReadCaseRequest>
            </inputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render XML">
        <pd:type>com.tibco.plugin.xml.XMLRendererActivity</pd:type>
        <pd:resourceType>ae.activities.XMLRendererActivity</pd:resourceType>
        <pd:x>913</pd:x>
        <pd:y>63</pd:y>
        <config>
            <renderAsText>text</renderAsText>
            <validateInput>false</validateInput>
            <term>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx2:Customer_InformationElement" minOccurs="0" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:for-each select="$SiebelData/AccumulatedOutput/pfx2:Customer_InformationElement">
                    <pfx2:Customer_InformationElement>
                        <xsl:if test="siebelCircuitID">
                            <siebelCircuitID>
                                <xsl:value-of select="if (siebelCircuitID!=&quot;&quot; ) then siebelCircuitID else &quot;&quot;"/>
                            </siebelCircuitID>
                        </xsl:if>
                        <xsl:if test="projectManager">
                            <projectManager>
                                <xsl:value-of select="projectManager"/>
                            </projectManager>
                        </xsl:if>
                        <xsl:if test="clientName">
                            <clientName>
                                <xsl:value-of select="clientName"/>
                            </clientName>
                        </xsl:if>
                        <xsl:if test="accountManager">
                            <accountManager>
                                <xsl:value-of select="accountManager"/>
                            </accountManager>
                        </xsl:if>
                        <xsl:if test="account">
                            <account>
                                <xsl:value-of select="account"/>
                            </account>
                        </xsl:if>
                        <xsl:if test="contractor">
                            <contractor>
                                <xsl:value-of select="contractor"/>
                            </contractor>
                        </xsl:if>
                        <xsl:if test="location">
                            <location>
                                <xsl:value-of select="location"/>
                            </location>
                        </xsl:if>
                        <xsl:if test="regionView">
                            <regionView>
                                <xsl:value-of select="regionView"/>
                            </regionView>
                        </xsl:if>
                        <xsl:if test="floor">
                            <floor>
                                <xsl:value-of select="floor"/>
                            </floor>
                        </xsl:if>
                        <xsl:if test="clientID">
                            <clientID>
                                <xsl:value-of select="clientID"/>
                            </clientID>
                        </xsl:if>
                        <xsl:if test="serviceType">
                            <serviceType>
                                <xsl:value-of select="serviceType"/>
                            </serviceType>
                        </xsl:if>
                        <xsl:if test="GPSCoordinates">
                            <GPSCoordinates>
                                <xsl:value-of select="GPSCoordinates"/>
                            </GPSCoordinates>
                        </xsl:if>
                        <xsl:if test="bandwidthupdown">
                            <bandwidthupdown>
                                <xsl:value-of select="bandwidthupdown"/>
                            </bandwidthupdown>
                        </xsl:if>
                        <xsl:if test="technology">
                            <technology>
                                <xsl:value-of select="technology"/>
                            </technology>
                        </xsl:if>
                        <xsl:if test="serviceStatus">
                            <serviceStatus>
                                <xsl:value-of select="serviceStatus"/>
                            </serviceStatus>
                        </xsl:if>
                        <xsl:if test="buildingName">
                            <buildingName>
                                <xsl:value-of select="buildingName"/>
                            </buildingName>
                        </xsl:if>
                        <xsl:if test="buildingID">
                            <buildingID>
                                <xsl:value-of select="buildingID"/>
                            </buildingID>
                        </xsl:if>
                        <xsl:if test="contactPerson">
                            <contactPerson>
                                <xsl:value-of select="contactPerson"/>
                            </contactPerson>
                        </xsl:if>
                        <xsl:if test="mobile">
                            <mobile>
                                <xsl:value-of select="mobile"/>
                            </mobile>
                        </xsl:if>
                        <xsl:if test="sector">
                            <sector>
                                <xsl:value-of select="sector"/>
                            </sector>
                        </xsl:if>
                        <xsl:if test="email">
                            <email>
                                <xsl:value-of select="email"/>
                            </email>
                        </xsl:if>
                        <xsl:if test="serviceStart">
                            <serviceStart>
                                <xsl:value-of select="serviceStart"/>
                            </serviceStart>
                        </xsl:if>
                        <xsl:if test="serviceEnd">
                            <serviceEnd>
                                <xsl:value-of select="serviceEnd"/>
                            </serviceEnd>
                        </xsl:if>
                        <xsl:if test="requestDate">
                            <requestDate>
                                <xsl:value-of select="requestDate"/>
                            </requestDate>
                        </xsl:if>
                        <xsl:if test="installDate">
                            <installDate>
                                <xsl:value-of select="installDate"/>
                            </installDate>
                        </xsl:if>
                        <xsl:if test="notesComments">
                            <notesComments>
                                <xsl:value-of select="notesComments"/>
                            </notesComments>
                        </xsl:if>
                        <xsl:if test="address">
                            <address>
                                <xsl:value-of select="address"/>
                            </address>
                        </xsl:if>
                        <xsl:if test="engineer">
                            <engineer>
                                <xsl:value-of select="engineer"/>
                            </engineer>
                        </xsl:if>
                        <xsl:if test="lastNotificationBy">
                            <lastNotificationBy>
                                <xsl:value-of select="lastNotificationBy"/>
                            </lastNotificationBy>
                        </xsl:if>
                        <xsl:if test="lastNotificationDate">
                            <lastNotificationDate>
                                <xsl:value-of select="lastNotificationDate"/>
                            </lastNotificationDate>
                        </xsl:if>
                        <xsl:if test="recordStatus">
                            <recordStatus>
                                <xsl:value-of select="recordStatus"/>
                            </recordStatus>
                        </xsl:if>
                    </pfx2:Customer_InformationElement>
                </xsl:for-each>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>1131</pd:x>
        <pd:y>173</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Assign-1">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>1026</pd:x>
        <pd:y>70</pd:y>
        <config>
            <variableName>ProcessStatus</variableName>
        </config>
        <pd:inputBindings>
            <status>
                <xsl:value-of select="&quot;success&quot;"/>
            </status>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Assign</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>FindCases</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>FindCases</pd:from>
        <pd:to>ReadCaseCustomerInformation</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render XML</pd:from>
        <pd:to>Assign-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ReadCaseCustomerInformation</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Render XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign-1</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>