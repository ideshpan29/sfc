<?xml version="1.0" encoding="UTF-8"?>
<!--Created by TIBCO WSDL-->
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://services.bds.tibco.com/BusinessDataServices_1.2.0" xmlns:ns0="http://api.bds.tibco.com" xmlns:ns2="http://exception.api.common.n2.tibco.com" xmlns:ns1="http://exception.api.bds.tibco.com" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" name="BusinessDataServices_1.2.0" targetNamespace="http://services.bds.tibco.com/BusinessDataServices_1.2.0">
    <wsdl:types>
        <xs:schema xmlns="http://exception.api.common.n2.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://exception.api.common.n2.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:complexType name="DetailedErrorLine">
                <xs:annotation>
                    <xs:documentation>Extension of ErrorLine, which adds a line number, column number and severity level.</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns2:ErrorLine">
                        <xs:attribute name="columnNumber" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Column number in which the error occurred.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="lineNumber" type="xs:int">
                            <xs:annotation>
                                <xs:documentation>Line number on which the error occurred.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="severity" use="required">
                            <xs:annotation>
                                <xs:documentation>Severity of the message - for example, ERROR, WARNING or INFORMATION.</xs:documentation>
                            </xs:annotation>
                            <xs:simpleType>
                                <xs:restriction base="xs:string">
                                    <xs:enumeration value="WARNING"/>
                                    <xs:enumeration value="ERROR"/>
                                    <xs:enumeration value="INFORMATION"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="DetailedException">
                <xs:sequence>
                    <xs:element name="error" type="ns2:ErrorLine" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ErrorLine">
                <xs:annotation>
                    <xs:documentation>Single error or warning message, containing an error code, message string and parameters.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="parameter" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Array of parameter values that can be applied to a foreign language message.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="code" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Code associated with this error.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="message" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Default English form of the error message.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:element name="DeploymentParameterFault">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="error" type="ns2:ErrorLine" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="InternalServiceFault">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="error" type="ns2:ErrorLine"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="InvalidWorkTypeFault">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="error" type="ns2:ErrorLine"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="WorkTypeFault">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="error" type="ns2:ErrorLine"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns="http://exception.api.bds.tibco.com" xmlns:comex="http://exception.api.common.n2.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://exception.api.bds.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:import namespace="http://exception.api.common.n2.tibco.com"/>
            <xs:element name="CaseDataAccessFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>An Error Occurred while accessing case data from BDS Case DataStore</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="CaseDataChangedFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>This implies that something else has updated an object since a given reference to it was constructed</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="CaseModelIncorrectStateFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>An error thrown when CaseModel is found to be in an incorrect state in BDS DB</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="CaseModelReferenceFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>An Error Occurred while accessing CaseModel Information relevant to a Case</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="CaseReferenceFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>An Error Occurred while retrieving a Case from BDS Case DataStore  </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="DataViewReferenceFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>A data view reference was faulty in that it was either a non-existent ID or non-existent name</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="DocumentReferenceFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>Occurs when a bad document reference is suppled to the document service</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="DocumentStoreAccessFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>Indicates a problem accessing the ECM system that hosts the document store</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="FolderReferenceFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>Occurs when a bad folder reference is suppled to the document service</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="InternalServiceFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>Generic Error that indicates any unexpected exception during BDS Operations</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="InvalidCaseModelFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>An error thrown when CaseModel does not exist in BDS System DB</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="InvalidDataFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>The data payload passed to an API was somehow invalid. For example, if the payload is a Data View, it may contain illegal search conditions.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="NotificationFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>Indicates that a notification listener failed to process a received notification</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="OwnerReferenceFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>Occurs when a bad owner reference is suppled to the document service</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="SecurityFault" type="comex:DetailedException">
                <xs:annotation>
                    <xs:documentation>An error thrown when Clients do not have necessary permission to access given BDS API</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:schema>
        <xs:schema xmlns="http://api.bds.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://api.bds.tibco.com" version="1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified">
            <xs:complexType name="AndGroup">
                <xs:annotation>
                    <xs:documentation>Search And Operator Group</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns0:ConditionGroup"/>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="AppDetails">
                <xs:annotation>
                    <xs:documentation>Application Details type (name and version)</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="name" type="xs:string"/>
                    <xs:element name="majorVersion" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AttributeInfo">
                <xs:annotation>
                    <xs:documentation>Attribute information (part of CaseClassInfo)</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="path" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>an attribute name, or dot-separated if the attribute belongs to a contained global object (and includeGlobalObjectAttributes=true or omitted in the request). Each dot-separated fragment will be followed by [] if it is multiplicity-many.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="label" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>label of the attribute, as defined in the BOM. Only included if includeLabels=true in the request and the application DAA was created in AMX-BPM 3.1 or later.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="type" type="ns0:AttributeTypeEnum"/>
                    <xs:element name="enumLiteral" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="AttributeSearchCondition">
                <xs:annotation>
                    <xs:documentation>Search Condition</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns0:SearchCondition">
                        <xs:sequence>
                            <xs:element name="attrPath" type="xs:string"/>
                            <xs:element name="operator" type="ns0:SearchOperatorEnum"/>
                            <xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Only required in conjunction with certain operators</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="parameterName" type="xs:string" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>Allows a parameter name to be assigned that will enable the value(s) for 'value' to be overridden at execution-time</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:simpleType name="AttributeTypeEnum">
                <xs:annotation>
                    <xs:documentation>Attribute types</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ATTR_TEXT"/>
                    <xs:enumeration value="ATTR_ID"/>
                    <xs:enumeration value="ATTR_URI"/>
                    <xs:enumeration value="ATTR_DATE"/>
                    <xs:enumeration value="ATTR_TIME"/>
                    <xs:enumeration value="ATTR_DATETIME"/>
                    <xs:enumeration value="ATTR_DATETIMETZ"/>
                    <xs:enumeration value="ATTR_DURATION"/>
                    <xs:enumeration value="ATTR_INTEGER"/>
                    <xs:enumeration value="ATTR_DECIMAL"/>
                    <xs:enumeration value="ATTR_BOOLEAN"/>
                    <xs:enumeration value="ATTR_ENUM"/>
                    <xs:enumeration value="OBJECT"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="CaseClassDetails">
                <xs:annotation>
                    <xs:documentation>Details of a case class: its name and major version</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseClass" type="xs:string"/>
                    <xs:element name="majorVersion" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CaseClassInfo">
                <xs:annotation>
                    <xs:documentation>Information about a case class: its name and attribute details</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="name" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>fully-qualified class name</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="label" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>label of the class, as defined in the BOM. Only included if includeLabels=true in the request and the application DAA was created in AMX-BPM 3.1 or later.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="attributeInfo" type="ns0:AttributeInfo" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Only included if includeAttributes=true (or omitted) in the request</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="appDetails" type="ns0:AppDetails" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Only included if includeAppDetails=true in the request</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CaseClassInfosForApp">
                <xs:sequence>
                    <xs:element name="appDetails" type="ns0:AppDetails"/>
                    <xs:element name="caseClassInfo" type="ns0:CaseClassInfo" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CaseCriteriaType">
                <xs:annotation>
                    <xs:documentation>DQL Criteria for find and navigate by Criteria</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="queryString" type="xs:string"/>
                    <xs:element name="namedParameterAssignment" type="ns0:NamedParameterAssignment" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>For each condition that has an associated named parameter, a value must be specified here, except where 
 condition has a default value for the parameter, in which case overriding it here is optional. This capability would not generally be used, but it is allowed.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="paginationOptions" type="ns0:PaginationOptions" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CaseDataType">
                <xs:annotation>
                    <xs:documentation>Case Reference and Case Payload pair used by read and update operations</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseReference" type="xs:string"/>
                    <xs:element name="casePayload" type="xs:string"/>
                    <xs:element name="caseMetaData" type="ns0:CaseMetaData" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The details about the case state (inc. The name of the attribute that contains the case state)</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CaseMetaData">
                <xs:annotation>
                    <xs:documentation>Details about the case state</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="stateName" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The name of the attribute that contains the case state</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CaseModelBasicInfoType">
                <xs:annotation>
                    <xs:documentation>Case Model Basic Information</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseModelID" type="xs:long"/>
                    <xs:element name="appName" type="xs:string"/>
                    <xs:element name="majorVersion" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CaseModelType">
                <xs:annotation>
                    <xs:documentation>Case Model Full Information</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseModelID" type="xs:long"/>
                    <xs:element name="appName" type="xs:string"/>
                    <xs:element name="currentVersion" type="xs:string"/>
                    <xs:element name="installedVersion" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The version that is currently installed - meaning that all the DB scripts have been run, and is valid to have data present at this version.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="datetimeDeploymentUpdated" type="xs:dateTime"/>
                    <xs:element name="createScript" type="xs:string"/>
                    <xs:element name="updateScript" type="xs:string" minOccurs="0"/>
                    <xs:element name="dropScript" type="xs:string" minOccurs="0"/>
                    <xs:element name="frozenDetails" type="ns0:FreezeDetailsType">
                        <xs:annotation>
                            <xs:documentation>Details about if the model has been frozen</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="state" type="ns0:CaseModelVersionStateEnum"/>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="CaseModelVersionStateEnum">
                <xs:annotation>
                    <xs:documentation>Enumerated value specifying state of CaseModelVersion.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="INITIAL"/>
                    <xs:enumeration value="INSTALLED"/>
                    <xs:enumeration value="PENDING_DBA_ACTION_TO_UNINSTALL"/>
                    <xs:enumeration value="PENDING_DBA_ACTION_TO_INSTALL"/>
                    <xs:enumeration value="FAILED_TO_UNINSTALL"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="CaseObjectDetails">
                <xs:annotation>
                    <xs:documentation>Case reference and optional summary</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseReference" type="xs:string"/>
                    <xs:element name="details" type="ns0:CaseSummaryDetailsType" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Only included if includeSummary=true in request</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CaseObjectsByRole">
                <xs:annotation>
                    <xs:documentation>Case objects linked via a given association role</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="roleName" type="xs:string"/>
                    <xs:element name="roleLabel" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Only included if includeLabelAndType=true in request</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="caseObjectDetails" type="ns0:CaseObjectDetails" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="hasMoreResults" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Only included if the request limited the results via pagination options</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CaseReferenceWithSummaryDetailsType">
                <xs:annotation>
                    <xs:documentation>Case Reference and it's summary details</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseReference" type="xs:string"/>
                    <xs:element name="details" type="ns0:CaseSummaryDetailsType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CaseState">
                <xs:sequence>
                    <xs:element name="caseReference" type="xs:string"/>
                    <xs:element name="value" type="ns0:CaseStateValue" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The current value of the case's case state attribute. Omitted if the attribute has no value, or the case class has no case state attribute.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="allowedValue" type="ns0:CaseStateValue" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>All possible values that are allowed to be assigned to the case's case state attribute (in the same order in which they are defined in the Enumeration). Omitted if the case class has no case state attribute, or 'includeAllowedValues' was not set true in the request.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CaseStateValue">
                <xs:annotation>
                    <xs:documentation>A value assignable to a case state attribute.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="label" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The label of the enuemration literal. Only included if generated from Business Studio 4.1 or above.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="name" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The name (equal to the literal value) of the enumeration literal.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CaseSummaryDetailsType">
                <xs:annotation>
                    <xs:documentation>Given set of details for a case summary</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="name" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>The name of the attribute </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="label" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The label of the attribute</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="value" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The value of the attribute, if it has a value</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="type" type="ns0:AttributeTypeEnum" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The type of the attribute</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="isCaseIdentifier" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>True if the element is a case identifier (False if not set)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="isCompositeCaseIdentifier" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>True if the element is a composite case identifier (False if not set)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="isState" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>True if the element is a state (False if not set)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="CategorySearchDetails">
                <xs:annotation>
                    <xs:documentation>Parameters for searching for category(s)</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="name" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Slash-separated path to the category in the hierarchy. If omitted, will match all top-level categories</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="childDepth" default="0" type="xs:int" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Number of levels of child categories to get beneath the matching category(s). -1 for unlimited depth. Omit to get no children.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="childrenOnly" default="false" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>In conjunction with childDepth, if set true, this omits the category itself and only obtains children.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ConditionGroup" abstract="true">
                <xs:annotation>
                    <xs:documentation>Search Abstract Condition</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns0:LogicalOperator">
                        <xs:sequence>
                            <xs:element name="condition" type="ns0:SearchCondition" minOccurs="2" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="CreateDataViewRequestType">
                <xs:annotation>
                    <xs:documentation>Request type for createDataView</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="viewSpecification" type="ns0:ViewSpecification"/>
                    <xs:element name="category" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="CreateDataViewResponseType">
                <xs:annotation>
                    <xs:documentation>Response type for createDataView</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="viewID" type="xs:long"/>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="DBScriptActionEnum">
                <xs:annotation>
                    <xs:documentation>Enumerated value specifying state changing actions on Case Model</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="CREATE_SCRIPT_EXECUTED"/>
                    <xs:enumeration value="UPDATE_SCRIPT_EXECUTED"/>
                    <xs:enumeration value="DROP_SCRIPT_EXECUTED"/>
                    <xs:enumeration value="FREEZE_CASE_DATA_MODEL"/>
                    <xs:enumeration value="UNFREEZE_CASE_DATA_MODEL"/>
                    <xs:enumeration value="CLEANUP_COMPLETE"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="DatabaseScriptDetailsType">
                <xs:annotation>
                    <xs:documentation>Details of all database scripts for a given version of the case model</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="version" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Full case model version of this set of DB scripts e.g. 1.2.3.4</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="revision" type="xs:int">
                        <xs:annotation>
                            <xs:documentation>The revision representing the order in which the audit entries were created (lowest value is the oldest entry)</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="createScript" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The database create script</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="updateScript" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The database update script</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="dropScript" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The database drop script</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="operationDetails" type="ns0:OperationDetailsType"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DeleteDataViewRequestType">
                <xs:annotation>
                    <xs:documentation>Request type for deleteDataView</xs:documentation>
                </xs:annotation>
                <xs:choice>
                    <xs:annotation>
                        <xs:documentation>Identify the view to delete by either id or name</xs:documentation>
                    </xs:annotation>
                    <xs:element name="viewID" type="xs:long"/>
                    <xs:element name="viewName" type="xs:string"/>
                </xs:choice>
            </xs:complexType>
            <xs:complexType name="EditDataViewRequestType">
                <xs:annotation>
                    <xs:documentation>Request type for editDataView</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="viewID" type="xs:long"/>
                    <xs:element name="viewSpecification" type="ns0:ViewSpecification"/>
                    <xs:element name="category" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="FreezeDetailsType">
                <xs:annotation>
                    <xs:documentation>Details about if a given model is frozen and if so by who</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="operationDetails" type="ns0:OperationDetailsType" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="isFrozen" use="required" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>True if the case model is frozen and can not be upgrade.  This prevents a case model being updated</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="GetAuditInfoRequestType">
                <xs:annotation>
                    <xs:documentation>Details required to retrieve a case model's audit details</xs:documentation>
                </xs:annotation>
                <xs:attribute name="caseModelID" use="required" type="xs:long">
                    <xs:annotation>
                        <xs:documentation>The internal ID of the case model that the audit information should be retrieved.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="GetAuditInfoResponseType">
                <xs:annotation>
                    <xs:documentation>Details of all audit details for a given case model</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="auditEntry" type="ns0:DatabaseScriptDetailsType" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Sequence of all the audit entries for a given case model</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetCaseClassInfoRequestType">
                <xs:annotation>
                    <xs:documentation>Details required to retrieve information about Case Classes</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:choice minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Identify application either by name/version combo or case model ID. If omitted, information for all apps is returned.</xs:documentation>
                        </xs:annotation>
                        <xs:element name="appDetails" type="ns0:AppDetails"/>
                        <xs:element name="caseModelID" type="xs:long"/>
                    </xs:choice>
                    <xs:element name="caseClass" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>If app details are provided, then caseClass can be set to one or more case class names to get info for  specific class(es) rather than all for the app. Note: This is ignored if no app details are provided.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="includeAppDetails" default="false" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Set true to include app details with each CaseClassInfo in the response. Generally set only when retrieving info for multiple apps. (default: false)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="includeAttributes" default="true" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Set true to include attribute details (rather than just classes) in the response (default: true)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="includeGlobalObjectAttributes" default="true" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Set true to include attributes of contained global objects, as well as the case object itself (default: true). Ignored unless includeAttributes=true.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="includeLabels" default="false" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Set true to include labels as well as names in the response (default: false)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="GetCaseClassInfoResponseType">
                <xs:annotation>
                    <xs:documentation>Details of selected Case Classes</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseClassInfo" type="ns0:CaseClassInfo" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Will be sorted by label (if includeLabels=true). Regardless, will be then sorted on name, app name and app majorVersion.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetCaseModelBasicInfoRequestType">
                <xs:annotation>
                    <xs:documentation>Details required to retrieve Basic Case Model information</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:annotation>
                        <xs:documentation>Leaving appName empty would return all case models</xs:documentation>
                    </xs:annotation>
                    <xs:element name="appName" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetCaseModelBasicInfoResponseType">
                <xs:annotation>
                    <xs:documentation>Details (basic) of selected Case Model(s)</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseModel" type="ns0:CaseModelBasicInfoType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetCaseModelRequestType">
                <xs:annotation>
                    <xs:documentation>Details required to retrieve Full Case Model information</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:annotation>
                        <xs:documentation>Leaving appName empty would return all case models</xs:documentation>
                    </xs:annotation>
                    <xs:element name="appName" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetCaseModelResponseType">
                <xs:annotation>
                    <xs:documentation>Details (full) of selected Case Model(s)</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseModel" type="ns0:CaseModelType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetCaseReferencesForDataViewRequestType">
                <xs:annotation>
                    <xs:documentation>Details required to perform a search/view</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:choice>
                        <xs:annotation>
                            <xs:documentation>Specify either a view ID or name to evaluate a previously saved view, or a number of conditions on a case class that define an ad-hoc view for immediate evluation</xs:documentation>
                        </xs:annotation>
                        <xs:element name="viewDetails" type="ns0:ViewDetails"/>
                        <xs:element name="viewID" type="xs:long"/>
                        <xs:element name="viewName" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Globally-unique view name</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                    <xs:element name="namedParameterAssignment" type="ns0:NamedParameterAssignment" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>For each condition that has an associated named parameter, a value must be specified here, except where that condition has a default value for the parameter, in which case overriding it here is optional. This capability would not generally be used for ad-hoc views, but it is allowed.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="sortAttribute" type="ns0:SortAttribute" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Allows sorting behaviour to be defined for ad-hoc views, or overridden for saved views. If omitted for an ad-hoc view, default (GORef) sorting will occur; For a saved view, sorting specified at the time of view creation will be used.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="paginationOptions" type="ns0:PaginationOptions" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetCaseStateRequestType">
                <xs:annotation>
                    <xs:documentation>Request type for getCaseState</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseReference" type="xs:string" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="includeAllowedValues" default="false" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>If set true, the reponse will include all possible case state values for the case object, not just the current value.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="GetCaseStateResponseType">
                <xs:annotation>
                    <xs:documentation>Response type for getCaseState</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="result" type="ns0:CaseState" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetCaseSummaryRequestType">
                <xs:annotation>
                    <xs:documentation>Case Reference to get the summary information for</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseReference" type="xs:string" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="includeLabelAndType" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>If true, then also include details about the label and type for the attribute in the response. (Default = false - no label or type data returned)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="GetCaseSummaryResponseType">
                <xs:annotation>
                    <xs:documentation>Case summary information for a given case reference</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseReferenceDetails" type="ns0:CaseReferenceWithSummaryDetailsType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetDataViewCategoriesRequestType">
                <xs:annotation>
                    <xs:documentation>Details required to obtain category details</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="category" type="ns0:CategorySearchDetails" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetDataViewCategoriesResponseType">
                <xs:annotation>
                    <xs:documentation>Details of categories</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="category" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetDataViewDetailsRequestType">
                <xs:annotation>
                    <xs:documentation>Details required to retrieve Data View(s)</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:choice>
                        <xs:annotation>
                            <xs:documentation>Identify a single view either by id or name, or include wildcards in the name to match many. Alternatively, specify an app, case class, or category to get all associated views, or uncategorized to get all views that do not belong to any category.</xs:documentation>
                        </xs:annotation>
                        <xs:element name="appDetails" type="ns0:AppDetails"/>
                        <xs:element name="caseClassDetails" type="ns0:CaseClassDetails"/>
                        <xs:element name="category" type="ns0:CategorySearchDetails" maxOccurs="unbounded"/>
                        <xs:element name="uncategorized" type="ns0:Uncategorized">
                            <xs:annotation>
                                <xs:documentation>Empty element indicates that views that do NOT belong to any category should be matched.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="viewID" type="xs:long"/>
                        <xs:element name="viewName" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>May use the %_*? wildcard characters (escape with '\'), so can match multiple views</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                    <xs:element name="viewDetailsRequirement" type="ns0:ViewDetailsRequirementEnum" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Determines which elements are required for each view in the response: Either NAME,  NAME_AND_DESCRIPTION, NAME_AND_PARAMETERS or NAME_DESCRIPTION_AND_PARAMETERS.  If this element is omitted, then all details will be returned (except parameters as they are present in the condition tree itself)</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="includeAppDetails" default="false" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>If present and set true, this will cause inclusion of an 'appDetails' element within each 'result' element of the response.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="includeCategories" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>If present and set true, this will cause inclusion of which category or categories each view belongs to (default: false).  If the caller intends to subsequently update a view via the editDataView API, then this information will be required.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="GetDataViewDetailsResponseType">
                <xs:annotation>
                    <xs:documentation>Details of selected Data Views</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="result" type="ns0:ViewSpecificationWithID" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="LinkResponseType">
                <xs:annotation>
                    <xs:documentation>Response type for linking (link/unlink) operations</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseReference" type="xs:string"/>
                    <xs:element name="targetCaseReference" type="xs:string" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="LogicalOperator" abstract="true">
                <xs:annotation>
                    <xs:documentation>Search - abstract operator</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns0:SearchCondition"/>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="NamedParameterAssignment">
                <xs:annotation>
                    <xs:documentation>Search - parameter assignment</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="name" type="xs:string"/>
                    <xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NamedParameterMetadata">
                <xs:sequence>
                    <xs:element name="name" type="xs:string"/>
                    <xs:element name="type" type="ns0:AttributeTypeEnum">
                        <xs:annotation>
                            <xs:documentation>A member of AttributeTypeEnum, e.g. ATTR_TEXT or ATTR_INTEGER</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="multiplicity" type="ns0:ParameterValueMultiplicityEnum" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Number of values required for the parameter (ONE, TWO or MANY).  If omitted, assume ONE.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="enumLiteral" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>If type=ATTR_ENUM, one or more enumLiteral elements will give the possible values</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NavigateCaseDetailedRequestType">
                <xs:annotation>
                    <xs:documentation>Request type for navigateCaseDetailed</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="sourceCaseReference" type="xs:string"/>
                    <xs:element name="targetRoleName" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Role name to navigated. If missing, results will be included for all role names.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="queryOptions" type="ns0:PaginationOptions" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="includeLabelAndType" default="false" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>If true, the response will include corresponding labels wherever names appear (default=false)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="includeSummary" default="false" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>If true, the response will include case summary details in addition to case references (default=false)</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="NavigateCaseDetailedResponseType">
                <xs:annotation>
                    <xs:documentation>Response type for navigateCaseDetailed</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseObjectsByRole" type="ns0:CaseObjectsByRole" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>One element per association role in the source case type</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="NotifyDDLExecutionRequestType">
                <xs:annotation>
                    <xs:documentation>Details required for NotifyDDLExecution operation</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseModelID" type="xs:long"/>
                    <xs:element name="databaseScriptAction" type="ns0:DBScriptActionEnum">
                        <xs:annotation>
                            <xs:documentation>This can take the following values:
CREATE_SCRIPT_EXECUTED - Record that the create database script has been run
UPDATE_SCRIPT_EXECUTED - Record that the update database script has been run
DROP_SCRIPT_EXECUTED - Record that the drop database script has been run
FREEZE_CASE_DATA_MODEL - Freeze the model to stop further changes
UNFREEZE_CASE_DATA_MODEL - Unfreeze the model to allow further changes
CLEANUP_COMPLETE - Notify that a cleanup operation has been completed
</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="skipValidation" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Skip any validation that the DDL has actually been run.  Default for this is to verify it has been run.  Set to TRUE if it is required to disable this validation check.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="OperationDetails" type="ns0:OperationDetailsType" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Details about why the operation was performed</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="OperationDetailsType">
                <xs:annotation>
                    <xs:documentation>Details about an operation that was made, including who made it, when it was done and why</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="username" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Name or username of the user conducting the operation</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:maxLength value="225"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:element>
                    <xs:element name="comment" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Description of why the operation was done (Maximum length: 400 characters)</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:maxLength value="400"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:element>
                    <xs:element name="timeOfOperation" type="xs:dateTime" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>When the operation was conducted - if not set when performing an operation, the current time will be recorded</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="userOperation" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>If the operation was performed by a user or automatically by the system (If unset, deemed to be true - i.e. user operation) </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
            <xs:complexType name="OrGroup">
                <xs:annotation>
                    <xs:documentation>Search - Logical OR operator</xs:documentation>
                </xs:annotation>
                <xs:complexContent>
                    <xs:extension base="ns0:ConditionGroup"/>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="PaginationOptions">
                <xs:annotation>
                    <xs:documentation>Search - Pagination options</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="startPosition" type="xs:int" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>0-based</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="maxResults" type="xs:int" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>-1 means return all</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="ParameterValueMultiplicityEnum">
                <xs:annotation>
                    <xs:documentation>Represents the number of values expected in a named parameter assignment</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ONE"/>
                    <xs:enumeration value="TWO"/>
                    <xs:enumeration value="MANY"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="SearchCondition" abstract="true">
                <xs:annotation>
                    <xs:documentation>Search - top level condition</xs:documentation>
                </xs:annotation>
            </xs:complexType>
            <xs:simpleType name="SearchOperatorEnum">
                <xs:annotation>
                    <xs:documentation>Search Operators</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="EQ"/>
                    <xs:enumeration value="NEQ"/>
                    <xs:enumeration value="GT"/>
                    <xs:enumeration value="GTE"/>
                    <xs:enumeration value="LT"/>
                    <xs:enumeration value="LTE"/>
                    <xs:enumeration value="SIZE_EQ"/>
                    <xs:enumeration value="SIZE_NEQ"/>
                    <xs:enumeration value="SIZE_GT"/>
                    <xs:enumeration value="SIZE_GTE"/>
                    <xs:enumeration value="SIZE_LT"/>
                    <xs:enumeration value="SIZE_LTE"/>
                    <xs:enumeration value="TYPE_OF"/>
                    <xs:enumeration value="NULL"/>
                    <xs:enumeration value="NOT_NULL"/>
                    <xs:enumeration value="BETWEEN"/>
                    <xs:enumeration value="NOT_BETWEEN"/>
                    <xs:enumeration value="IN"/>
                    <xs:enumeration value="NOT_IN"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="SearchResults">
                <xs:annotation>
                    <xs:documentation>Search - Results</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseReference" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="hasMoreResults" type="xs:boolean" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Only included if the request limited the results via pagination options</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="SortAttribute">
                <xs:annotation>
                    <xs:documentation>Search - sort attribute</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="attrPath" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Must be a multiplicity-one attribute of the case class or of a singularly-contained global class</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="order" type="ns0:SortOrderEnum"/>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="SortOrderEnum">
                <xs:annotation>
                    <xs:documentation>Search Sort Order</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ASC"/>
                    <xs:enumeration value="DESC"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="Uncategorized">
                <xs:annotation>
                    <xs:documentation>Represents a Data View not belonging to a category.</xs:documentation>
                </xs:annotation>
            </xs:complexType>
            <xs:complexType name="UpdateDBScriptsRequestType">
                <xs:annotation>
                    <xs:documentation>Details required to a update DB Script</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseModelID" type="xs:long"/>
                    <xs:element name="createScript" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The database create script to be updated</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="updateScript" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The database update script to be updated</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="dropScript" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>The database drop script to be updated</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="operationDetails" type="ns0:OperationDetailsType">
                        <xs:annotation>
                            <xs:documentation>Details about why the operation was performed</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ViewDetails">
                <xs:annotation>
                    <xs:documentation>Search - details of a view</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseClassDetails" type="ns0:CaseClassDetails"/>
                    <xs:element name="condition" type="ns0:SearchCondition" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:simpleType name="ViewDetailsRequirementEnum">
                <xs:annotation>
                    <xs:documentation>Determines the required level of detail in a getDataViewDetails request</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="NAME"/>
                    <xs:enumeration value="NAME_AND_DESCRIPTION"/>
                    <xs:enumeration value="NAME_AND_PARAMETERS"/>
                    <xs:enumeration value="NAME_DESCRIPTION_AND_PARAMETERS"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:complexType name="ViewSpecification">
                <xs:annotation>
                    <xs:documentation>View Specification Detail</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="caseClassDetails" type="ns0:CaseClassDetails" minOccurs="0"/>
                    <xs:element name="name" type="xs:string"/>
                    <xs:element name="description" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Arbitrary text providing a 'friendly' description of the view</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="condition" type="ns0:SearchCondition" minOccurs="0"/>
                    <xs:element name="sortAttribute" type="ns0:SortAttribute" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>If omitted, results will be in ascending case reference order, unless overriden at evaluation time</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="ViewSpecificationWithID">
                <xs:annotation>
                    <xs:documentation>One of these will be returned for each matching view, in response to a getDataViewDetails call</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="viewID" type="xs:long"/>
                    <xs:element name="specification" type="ns0:ViewSpecification">
                        <xs:annotation>
                            <xs:documentation>Some elements within the ViewSpecification may be missing depending on the value of the viewDetailsRequirement element in the request</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="appDetails" type="ns0:AppDetails" minOccurs="0"/>
                    <xs:element name="parameter" type="ns0:NamedParameterMetadata" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>Named parameters and their data types. Only present if requested via viewDetailsRequirement in request.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="category" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>The category or categories that this view belongs to. Only present if includeCategories=true in the request.</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="CreateCaseRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for createCase Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseType" type="xs:string"/>
                        <xs:element name="caseModelVersion" type="xs:string"/>
                        <xs:element name="casePayload" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CreateCaseResponse">
                <xs:annotation>
                    <xs:documentation>Response Element for createCase Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseReference" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="CreateDataViewRequest" type="ns0:CreateDataViewRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for createDataView Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="CreateDataViewResponse" type="ns0:CreateDataViewResponseType">
                <xs:annotation>
                    <xs:documentation>Response Element for createDataView Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="DeleteCaseByCIDRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for deleteCaseByCID Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseModelVersion" type="xs:string"/>
                        <xs:element name="caseType" type="xs:string"/>
                        <xs:element name="casePayload" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DeleteCaseByCIDResponse" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Response Element for deleteCaseByCID Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="DeleteCaseByRefRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for deleteCaseByRef Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseReference" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="DeleteCaseByRefResponse" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Response Element for deleteCaseByRef Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="DeleteDataViewRequest" type="ns0:DeleteDataViewRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for deleteDataView Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="DeleteDataViewResponse" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Response Element for deleteDataView Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="EditDataViewRequest" type="ns0:EditDataViewRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for editDataView Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="EditDataViewResponse" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Response Element for editDataView Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="FindAllCasesRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for findAllCases Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseModelVersion" type="xs:string"/>
                        <xs:element name="caseType" type="xs:string"/>
                        <xs:element name="queryOptions" type="ns0:PaginationOptions" minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="FindAllCasesResponse" type="ns0:SearchResults">
                <xs:annotation>
                    <xs:documentation>Response Element for findAllCases Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="FindCaseByCIDRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for findCaseByCID Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseModelVersion" type="xs:string"/>
                        <xs:element name="caseType" type="xs:string"/>
                        <xs:element name="casePayload" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="FindCaseByCIDResponse">
                <xs:annotation>
                    <xs:documentation>Response Element for findCaseByCID Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseReference" type="xs:string" minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="FindCaseByCriteriaRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for findCaseByCriteria Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseModelVersion" type="xs:string"/>
                        <xs:element name="caseType" type="xs:string"/>
                        <xs:element name="criteria" type="ns0:CaseCriteriaType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="FindCaseByCriteriaResponse" type="ns0:SearchResults">
                <xs:annotation>
                    <xs:documentation>Response Element for findCaseByCriteria Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="FindCaseByExampleRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for findCaseByExample Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseModelVersion" type="xs:string"/>
                        <xs:element name="caseType" type="xs:string"/>
                        <xs:element name="casePayload" type="xs:string"/>
                        <xs:element name="queryOptions" type="ns0:PaginationOptions" minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="FindCaseByExampleResponse" type="ns0:SearchResults">
                <xs:annotation>
                    <xs:documentation>Response Element for findCaseByExample Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetAuditInfoRequest" type="ns0:GetAuditInfoRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for getAuditInfo Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetAuditInfoResponse" type="ns0:GetAuditInfoResponseType">
                <xs:annotation>
                    <xs:documentation>Response Element for getAuditInfo Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetCaseClassInfoRequest" type="ns0:GetCaseClassInfoRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for getCaseClassInfo Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetCaseClassInfoResponse" type="ns0:GetCaseClassInfoResponseType">
                <xs:annotation>
                    <xs:documentation>Response element for getCaseClassInfo Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetCaseModelBasicInfoRequest" type="ns0:GetCaseModelBasicInfoRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for getCaseModelBasicInfo Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetCaseModelBasicInfoResponse" type="ns0:GetCaseModelBasicInfoResponseType">
                <xs:annotation>
                    <xs:documentation>Response Element for getCaseModelBasicInfo Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetCaseModelRequest" type="ns0:GetCaseModelRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for getCaseModel Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetCaseModelResponse" type="ns0:GetCaseModelResponseType">
                <xs:annotation>
                    <xs:documentation>Response Element for getCaseModelversionInfo Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetCaseReferencesForDataViewRequest" type="ns0:GetCaseReferencesForDataViewRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for getCaseReferencesForDataView Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetCaseReferencesForDataViewResponse" type="ns0:SearchResults">
                <xs:annotation>
                    <xs:documentation>Response element for getCaseReferencesForDataView Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetCaseStateRequest" type="ns0:GetCaseStateRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for getCaseState Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetCaseStateResponse" type="ns0:GetCaseStateResponseType">
                <xs:annotation>
                    <xs:documentation>Response Element for getCaseState Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetCaseSummaryRequest" type="ns0:GetCaseSummaryRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for getCaseSummary Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetCaseSummaryResponse" type="ns0:GetCaseSummaryResponseType">
                <xs:annotation>
                    <xs:documentation>Response Element for getCaseSummary Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetDataViewCategoriesRequest" type="ns0:GetDataViewCategoriesRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for getCaseDataViewCategories Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetDataViewCategoriesResponse" type="ns0:GetDataViewCategoriesResponseType">
                <xs:annotation>
                    <xs:documentation>Response Element for getCaseDataViewCategories Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetDataViewDetailsRequest" type="ns0:GetDataViewDetailsRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for getDataViewDetails Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="GetDataViewDetailsResponse" type="ns0:GetDataViewDetailsResponseType">
                <xs:annotation>
                    <xs:documentation>Response Element for getDataViewDetails Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="LinkCaseRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for linkCase Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="sourceCaseReference" type="xs:string"/>
                        <xs:element name="targetCaseReference" type="xs:string" maxOccurs="unbounded"/>
                        <xs:element name="targetRoleName" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LinkCaseResponse" type="ns0:LinkResponseType">
                <xs:annotation>
                    <xs:documentation>Response Element for linkCase Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="LockCaseRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for lockCase Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseReferences" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="LockCaseResponse" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Response Element for lockCase Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="NavigateCaseByCriteriaRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for navigateCaseByCriteria Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="sourceCaseReference" type="xs:string"/>
                        <xs:element name="targetRoleName" type="xs:string"/>
                        <xs:element name="targetCaseCriteria" type="ns0:CaseCriteriaType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="NavigateCaseByCriteriaResponse" type="ns0:SearchResults">
                <xs:annotation>
                    <xs:documentation>Response Element for navigateCaseByCriteria Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="NavigateCaseDetailedRequest" type="ns0:NavigateCaseDetailedRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for navigateCaseDetailed Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="NavigateCaseDetailedResponse" type="ns0:NavigateCaseDetailedResponseType">
                <xs:annotation>
                    <xs:documentation>Response Element for navigateCaseDetailed Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="NavigateCaseRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for navigateCase Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="sourceCaseReference" type="xs:string"/>
                        <xs:element name="targetRoleName" type="xs:string"/>
                        <xs:element name="queryOptions" type="ns0:PaginationOptions" minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="NavigateCaseResponse" type="ns0:SearchResults">
                <xs:annotation>
                    <xs:documentation>Response Element for navigateCase Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="NotifyDDLExecutionRequest" type="ns0:NotifyDDLExecutionRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for notifyDDLExecution Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="NotifyDDLExecutionResponse" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Response Element for notifyDDLExecution Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="ReadCaseRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for readCase Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseReference" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute name="includeCaseMetaData" type="xs:boolean">
                        <xs:annotation>
                            <xs:documentation>If the case meta data (including the name of the attribute containing the state) should be included in the response (Default = false)</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="ReadCaseResponse">
                <xs:annotation>
                    <xs:documentation>Response Element for readCase Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseData" type="ns0:CaseDataType" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="UnlinkCaseRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for unlinkCase Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="sourceCaseReference" type="xs:string"/>
                        <xs:element name="targetCaseReference" type="xs:string" maxOccurs="unbounded"/>
                        <xs:element name="targetRoleName" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="UnlinkCaseResponse" type="ns0:LinkResponseType">
                <xs:annotation>
                    <xs:documentation>Response Element for unlinkCase Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="UpdateCaseRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for updateCase Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseData" type="ns0:CaseDataType" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="UpdateCaseResponse">
                <xs:annotation>
                    <xs:documentation>Response Element for updateCase Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseReference" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="UpdateCasesWithLockRequest">
                <xs:annotation>
                    <xs:documentation>Request Element for updateCasesWithLock Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseData" type="ns0:CaseDataType" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="UpdateCasesWithLockResponse">
                <xs:annotation>
                    <xs:documentation>Response Element for updateCasesWithLock Operation</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="caseReference" type="xs:string" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="UpdateDBScriptsRequest" type="ns0:UpdateDBScriptsRequestType">
                <xs:annotation>
                    <xs:documentation>Request Element for updateDBScripts Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="UpdateDBScriptsResponse" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation>Response Element for updateDBScripts Operation</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="ViewDetails" type="ns0:ViewDetails">
                <xs:annotation>
                    <xs:documentation>Details of a data view: the case class to which it relates and search condition(s)</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="deleteCaseByCIDRequest">
        <wsdl:part name="deleteCaseByCIDRequest" element="ns0:DeleteCaseByCIDRequest"/>
    </wsdl:message>
    <wsdl:message name="deleteCaseByCIDResponse">
        <wsdl:part name="deleteCaseByCIDResponse" element="ns0:DeleteCaseByCIDResponse"/>
    </wsdl:message>
    <wsdl:message name="caseDataAccessFault">
        <wsdl:part name="caseDataAccessFault" element="ns1:CaseDataAccessFault"/>
    </wsdl:message>
    <wsdl:message name="caseDataChangedFault">
        <wsdl:part name="caseDataChangedFault" element="ns1:CaseDataChangedFault"/>
    </wsdl:message>
    <wsdl:message name="caseModelReferenceFault">
        <wsdl:part name="caseModelReferenceFault" element="ns1:CaseModelReferenceFault"/>
    </wsdl:message>
    <wsdl:message name="internalServiceFault">
        <wsdl:part name="internalServiceFault" element="ns1:InternalServiceFault"/>
    </wsdl:message>
    <wsdl:message name="securityFault">
        <wsdl:part name="securityFault" element="ns1:SecurityFault"/>
    </wsdl:message>
    <wsdl:message name="getCaseReferencesForDataViewRequest">
        <wsdl:part name="getCaseReferencesForDataViewRequest" element="ns0:GetCaseReferencesForDataViewRequest"/>
    </wsdl:message>
    <wsdl:message name="getCaseReferencesForDataViewResponse">
        <wsdl:part name="getCaseReferencesForDataViewResponse" element="ns0:GetCaseReferencesForDataViewResponse"/>
    </wsdl:message>
    <wsdl:message name="dataViewReferenceFault">
        <wsdl:part name="dataViewReferenceFault" element="ns1:DataViewReferenceFault"/>
    </wsdl:message>
    <wsdl:message name="invalidDataFault">
        <wsdl:part name="invalidDataFault" element="ns1:InvalidDataFault"/>
    </wsdl:message>
    <wsdl:message name="createCaseRequest">
        <wsdl:part name="createCaseRequest" element="ns0:CreateCaseRequest"/>
    </wsdl:message>
    <wsdl:message name="createCaseResponse">
        <wsdl:part name="createCaseResponse" element="ns0:CreateCaseResponse"/>
    </wsdl:message>
    <wsdl:message name="getCaseStateRequest">
        <wsdl:part name="getCaseStateRequest" element="ns0:GetCaseStateRequest"/>
    </wsdl:message>
    <wsdl:message name="getCaseStateResponse">
        <wsdl:part name="getCaseStateResponse" element="ns0:GetCaseStateResponse"/>
    </wsdl:message>
    <wsdl:message name="caseReferenceFault">
        <wsdl:part name="caseReferenceFault" element="ns1:CaseReferenceFault"/>
    </wsdl:message>
    <wsdl:message name="navigateCaseRequest">
        <wsdl:part name="navigateCaseRequest" element="ns0:NavigateCaseRequest"/>
    </wsdl:message>
    <wsdl:message name="navigateCaseResponse">
        <wsdl:part name="navigateCaseResponse" element="ns0:NavigateCaseResponse"/>
    </wsdl:message>
    <wsdl:message name="navigateCaseDetailedRequest">
        <wsdl:part name="navigateCaseDetailedRequest" element="ns0:NavigateCaseDetailedRequest"/>
    </wsdl:message>
    <wsdl:message name="navigateCaseDetailedResponse">
        <wsdl:part name="navigateCaseDetailedResponse" element="ns0:NavigateCaseDetailedResponse"/>
    </wsdl:message>
    <wsdl:message name="getCaseSummaryRequest">
        <wsdl:part name="getCaseSummaryRequest" element="ns0:GetCaseSummaryRequest"/>
    </wsdl:message>
    <wsdl:message name="getCaseSummaryResponse">
        <wsdl:part name="getCaseSummaryResponse" element="ns0:GetCaseSummaryResponse"/>
    </wsdl:message>
    <wsdl:message name="deleteCaseByRefRequest">
        <wsdl:part name="deleteCaseByRefRequest" element="ns0:DeleteCaseByRefRequest"/>
    </wsdl:message>
    <wsdl:message name="deleteCaseByRefResponse">
        <wsdl:part name="deleteCaseByRefResponse" element="ns0:DeleteCaseByRefResponse"/>
    </wsdl:message>
    <wsdl:message name="createDataViewRequest">
        <wsdl:part name="createDataViewRequest" element="ns0:CreateDataViewRequest"/>
    </wsdl:message>
    <wsdl:message name="createDataViewResponse">
        <wsdl:part name="createDataViewResponse" element="ns0:CreateDataViewResponse"/>
    </wsdl:message>
    <wsdl:message name="readCaseRequest">
        <wsdl:part name="readCaseRequest" element="ns0:ReadCaseRequest"/>
    </wsdl:message>
    <wsdl:message name="readCaseResponse">
        <wsdl:part name="readCaseResponse" element="ns0:ReadCaseResponse"/>
    </wsdl:message>
    <wsdl:message name="findAllCasesRequest">
        <wsdl:part name="findAllCasesRequest" element="ns0:FindAllCasesRequest"/>
    </wsdl:message>
    <wsdl:message name="findAllCasesResponse">
        <wsdl:part name="findAllCasesResponse" element="ns0:FindAllCasesResponse"/>
    </wsdl:message>
    <wsdl:message name="deleteDataViewRequest">
        <wsdl:part name="deleteDataViewRequest" element="ns0:DeleteDataViewRequest"/>
    </wsdl:message>
    <wsdl:message name="deleteDataViewResponse">
        <wsdl:part name="deleteDataViewResponse" element="ns0:DeleteDataViewResponse"/>
    </wsdl:message>
    <wsdl:message name="linkCaseRequest">
        <wsdl:part name="linkCaseRequest" element="ns0:LinkCaseRequest"/>
    </wsdl:message>
    <wsdl:message name="linkCaseResponse">
        <wsdl:part name="linkCaseResponse" element="ns0:LinkCaseResponse"/>
    </wsdl:message>
    <wsdl:message name="editDataViewRequest">
        <wsdl:part name="editDataViewRequest" element="ns0:EditDataViewRequest"/>
    </wsdl:message>
    <wsdl:message name="editDataViewResponse">
        <wsdl:part name="editDataViewResponse" element="ns0:EditDataViewResponse"/>
    </wsdl:message>
    <wsdl:message name="updateCaseRequest">
        <wsdl:part name="updateCaseRequest" element="ns0:UpdateCaseRequest"/>
    </wsdl:message>
    <wsdl:message name="updateCaseResponse">
        <wsdl:part name="updateCaseRequest" element="ns0:UpdateCaseResponse"/>
    </wsdl:message>
    <wsdl:message name="findCaseByCriteriaRequest">
        <wsdl:part name="findCaseByCriteriaRequest" element="ns0:FindCaseByCriteriaRequest"/>
    </wsdl:message>
    <wsdl:message name="findCaseByCriteriaResponse">
        <wsdl:part name="findCaseByCriteriaResponse" element="ns0:FindCaseByCriteriaResponse"/>
    </wsdl:message>
    <wsdl:message name="getDataViewDetailsRequest">
        <wsdl:part name="getDataViewDetailsRequest" element="ns0:GetDataViewDetailsRequest"/>
    </wsdl:message>
    <wsdl:message name="getDataViewDetailsResponse">
        <wsdl:part name="getDataViewDetailsResponse" element="ns0:GetDataViewDetailsResponse"/>
    </wsdl:message>
    <wsdl:message name="findCaseByCIDRequest">
        <wsdl:part name="findCaseByCIDRequest" element="ns0:FindCaseByCIDRequest"/>
    </wsdl:message>
    <wsdl:message name="findCaseByCIDResponse">
        <wsdl:part name="findCaseByCIDResponse" element="ns0:FindCaseByCIDResponse"/>
    </wsdl:message>
    <wsdl:message name="findCaseByExampleRequest">
        <wsdl:part name="findCaseByExampleRequest" element="ns0:FindCaseByExampleRequest"/>
    </wsdl:message>
    <wsdl:message name="findCaseByExampleResponse">
        <wsdl:part name="findCaseByExampleResponse" element="ns0:FindCaseByExampleResponse"/>
    </wsdl:message>
    <wsdl:message name="unlinkCaseRequest">
        <wsdl:part name="unlinkCaseRequest" element="ns0:UnlinkCaseRequest"/>
    </wsdl:message>
    <wsdl:message name="unlinkCaseResponse">
        <wsdl:part name="unlinkCaseResponse" element="ns0:UnlinkCaseResponse"/>
    </wsdl:message>
    <wsdl:message name="navigateCaseByCriteriaRequest">
        <wsdl:part name="navigateCaseByCriteriaRequest" element="ns0:NavigateCaseByCriteriaRequest"/>
    </wsdl:message>
    <wsdl:message name="navigateCaseByCriteriaResponse">
        <wsdl:part name="navigateCaseByCriteriaResponse" element="ns0:NavigateCaseByCriteriaResponse"/>
    </wsdl:message>
    <wsdl:message name="getDataViewCategoriesRequest">
        <wsdl:part name="getDataViewCategoriesRequest" element="ns0:GetDataViewCategoriesRequest"/>
    </wsdl:message>
    <wsdl:message name="getDataViewCategoriesResponse">
        <wsdl:part name="getDataViewCategoriesResponse" element="ns0:GetDataViewCategoriesResponse"/>
    </wsdl:message>
    <wsdl:portType name="BusinessDataServices">
        <wsdl:operation name="deleteCaseByCID">
            <wsdl:input message="tns:deleteCaseByCIDRequest"/>
            <wsdl:output message="tns:deleteCaseByCIDResponse"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseDataChangedFault" message="tns:caseDataChangedFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="getCaseReferencesForDataView">
            <wsdl:input message="tns:getCaseReferencesForDataViewRequest"/>
            <wsdl:output message="tns:getCaseReferencesForDataViewResponse"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="DataViewReferenceFault" message="tns:dataViewReferenceFault"/>
            <wsdl:fault name="InvalidDataFault" message="tns:invalidDataFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="createCase">
            <wsdl:input message="tns:createCaseRequest"/>
            <wsdl:output message="tns:createCaseResponse"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="getCaseState">
            <wsdl:input message="tns:getCaseStateRequest"/>
            <wsdl:output message="tns:getCaseStateResponse"/>
            <wsdl:fault name="CaseReferenceFault" message="tns:caseReferenceFault"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="navigateCase">
            <wsdl:input message="tns:navigateCaseRequest"/>
            <wsdl:output message="tns:navigateCaseResponse"/>
            <wsdl:fault name="CaseReferenceFault" message="tns:caseReferenceFault"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="navigateCaseDetailed">
            <wsdl:input message="tns:navigateCaseDetailedRequest"/>
            <wsdl:output message="tns:navigateCaseDetailedResponse"/>
            <wsdl:fault name="CaseReferenceFault" message="tns:caseReferenceFault"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="getCaseSummary">
            <wsdl:input message="tns:getCaseSummaryRequest"/>
            <wsdl:output message="tns:getCaseSummaryResponse"/>
            <wsdl:fault name="CaseReferenceFault" message="tns:caseReferenceFault"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="deleteCaseByRef">
            <wsdl:input message="tns:deleteCaseByRefRequest"/>
            <wsdl:output message="tns:deleteCaseByRefResponse"/>
            <wsdl:fault name="CaseReferenceFault" message="tns:caseReferenceFault"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseDataChangedFault" message="tns:caseDataChangedFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="createDataView">
            <wsdl:input message="tns:createDataViewRequest"/>
            <wsdl:output message="tns:createDataViewResponse"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InvalidDataFault" message="tns:invalidDataFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="readCase">
            <wsdl:input message="tns:readCaseRequest"/>
            <wsdl:output message="tns:readCaseResponse"/>
            <wsdl:fault name="CaseReferenceFault" message="tns:caseReferenceFault"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="findAllCases">
            <wsdl:input message="tns:findAllCasesRequest"/>
            <wsdl:output message="tns:findAllCasesResponse"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="deleteDataView">
            <wsdl:input message="tns:deleteDataViewRequest"/>
            <wsdl:output message="tns:deleteDataViewResponse"/>
            <wsdl:fault name="DataViewReferenceFault" message="tns:dataViewReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="linkCase">
            <wsdl:input message="tns:linkCaseRequest"/>
            <wsdl:output message="tns:linkCaseResponse"/>
            <wsdl:fault name="CaseReferenceFault" message="tns:caseReferenceFault"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="editDataView">
            <wsdl:input message="tns:editDataViewRequest"/>
            <wsdl:output message="tns:editDataViewResponse"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="DataViewReferenceFault" message="tns:dataViewReferenceFault"/>
            <wsdl:fault name="InvalidDataFault" message="tns:invalidDataFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="updateCase">
            <wsdl:input message="tns:updateCaseRequest"/>
            <wsdl:output message="tns:updateCaseResponse"/>
            <wsdl:fault name="CaseReferenceFault" message="tns:caseReferenceFault"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseDataChangedFault" message="tns:caseDataChangedFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="findCaseByCriteria">
            <wsdl:input message="tns:findCaseByCriteriaRequest"/>
            <wsdl:output message="tns:findCaseByCriteriaResponse"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="getDataViewDetails">
            <wsdl:input message="tns:getDataViewDetailsRequest"/>
            <wsdl:output message="tns:getDataViewDetailsResponse"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="DataViewReferenceFault" message="tns:dataViewReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="findCaseByCID">
            <wsdl:input message="tns:findCaseByCIDRequest"/>
            <wsdl:output message="tns:findCaseByCIDResponse"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="findCaseByExample">
            <wsdl:input message="tns:findCaseByExampleRequest"/>
            <wsdl:output message="tns:findCaseByExampleResponse"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="unlinkCase">
            <wsdl:input message="tns:unlinkCaseRequest"/>
            <wsdl:output message="tns:unlinkCaseResponse"/>
            <wsdl:fault name="CaseReferenceFault" message="tns:caseReferenceFault"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="navigateCaseByCriteria">
            <wsdl:input message="tns:navigateCaseByCriteriaRequest"/>
            <wsdl:output message="tns:navigateCaseByCriteriaResponse"/>
            <wsdl:fault name="CaseReferenceFault" message="tns:caseReferenceFault"/>
            <wsdl:fault name="CaseDataAccessFault" message="tns:caseDataAccessFault"/>
            <wsdl:fault name="CaseModelReferenceFault" message="tns:caseModelReferenceFault"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
        <wsdl:operation name="getDataViewCategories">
            <wsdl:input message="tns:getDataViewCategoriesRequest"/>
            <wsdl:output message="tns:getDataViewCategoriesResponse"/>
            <wsdl:fault name="InternalServiceFault" message="tns:internalServiceFault"/>
            <wsdl:fault name="SecurityFault" message="tns:securityFault"/>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="BusinessDataServices.soap" type="tns:BusinessDataServices">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="deleteCaseByCID">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="deleteCaseByCID"/>
            <wsdl:input>
                <soap:body use="literal" parts="deleteCaseByCIDRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="deleteCaseByCIDResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseDataChangedFault">
                <soap:fault use="literal" name="CaseDataChangedFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getCaseReferencesForDataView">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="getCaseReferencesForDataView"/>
            <wsdl:input>
                <soap:body use="literal" parts="getCaseReferencesForDataViewRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="getCaseReferencesForDataViewResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="DataViewReferenceFault">
                <soap:fault use="literal" name="DataViewReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InvalidDataFault">
                <soap:fault use="literal" name="InvalidDataFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createCase">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="createCase"/>
            <wsdl:input>
                <soap:body use="literal" parts="createCaseRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="createCaseResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getCaseState">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="getCaseState"/>
            <wsdl:input>
                <soap:body use="literal" parts="getCaseStateRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="getCaseStateResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseReferenceFault">
                <soap:fault use="literal" name="CaseReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="navigateCase">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="navigateCase"/>
            <wsdl:input>
                <soap:body use="literal" parts="navigateCaseRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="navigateCaseResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseReferenceFault">
                <soap:fault use="literal" name="CaseReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="navigateCaseDetailed">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="navigateCaseDetailed"/>
            <wsdl:input>
                <soap:body use="literal" parts="navigateCaseDetailedRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="navigateCaseDetailedResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseReferenceFault">
                <soap:fault use="literal" name="CaseReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getCaseSummary">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="getCaseSummary"/>
            <wsdl:input>
                <soap:body use="literal" parts="getCaseSummaryRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="getCaseSummaryResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseReferenceFault">
                <soap:fault use="literal" name="CaseReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteCaseByRef">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="deleteCaseByRef"/>
            <wsdl:input>
                <soap:body use="literal" parts="deleteCaseByRefRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="deleteCaseByRefResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseReferenceFault">
                <soap:fault use="literal" name="CaseReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseDataChangedFault">
                <soap:fault use="literal" name="CaseDataChangedFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="createDataView">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="createDataView"/>
            <wsdl:input>
                <soap:body use="literal" parts="createDataViewRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="createDataViewResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InvalidDataFault">
                <soap:fault use="literal" name="InvalidDataFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="readCase">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="readCase"/>
            <wsdl:input>
                <soap:body use="literal" parts="readCaseRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="readCaseResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseReferenceFault">
                <soap:fault use="literal" name="CaseReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findAllCases">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="findAllCases"/>
            <wsdl:input>
                <soap:body use="literal" parts="findAllCasesRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="findAllCasesResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="deleteDataView">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="deleteDataView"/>
            <wsdl:input>
                <soap:body use="literal" parts="deleteDataViewRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="deleteDataViewResponse"/>
            </wsdl:output>
            <wsdl:fault name="DataViewReferenceFault">
                <soap:fault use="literal" name="DataViewReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="linkCase">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="linkCase"/>
            <wsdl:input>
                <soap:body use="literal" parts="linkCaseRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="linkCaseResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseReferenceFault">
                <soap:fault use="literal" name="CaseReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="editDataView">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="editDataView"/>
            <wsdl:input>
                <soap:body use="literal" parts="editDataViewRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="editDataViewResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="DataViewReferenceFault">
                <soap:fault use="literal" name="DataViewReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InvalidDataFault">
                <soap:fault use="literal" name="InvalidDataFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="updateCase">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="updateCase"/>
            <wsdl:input>
                <soap:body use="literal" parts="updateCaseRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="updateCaseRequest"/>
            </wsdl:output>
            <wsdl:fault name="CaseReferenceFault">
                <soap:fault use="literal" name="CaseReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseDataChangedFault">
                <soap:fault use="literal" name="CaseDataChangedFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findCaseByCriteria">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="findCaseByCriteria"/>
            <wsdl:input>
                <soap:body use="literal" parts="findCaseByCriteriaRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="findCaseByCriteriaResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getDataViewDetails">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="getDataViewDetails"/>
            <wsdl:input>
                <soap:body use="literal" parts="getDataViewDetailsRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="getDataViewDetailsResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="DataViewReferenceFault">
                <soap:fault use="literal" name="DataViewReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findCaseByCID">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="findCaseByCID"/>
            <wsdl:input>
                <soap:body use="literal" parts="findCaseByCIDRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="findCaseByCIDResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findCaseByExample">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="findCaseByExample"/>
            <wsdl:input>
                <soap:body use="literal" parts="findCaseByExampleRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="findCaseByExampleResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="unlinkCase">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="unlinkCase"/>
            <wsdl:input>
                <soap:body use="literal" parts="unlinkCaseRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="unlinkCaseResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseReferenceFault">
                <soap:fault use="literal" name="CaseReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="navigateCaseByCriteria">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="navigateCaseByCriteria"/>
            <wsdl:input>
                <soap:body use="literal" parts="navigateCaseByCriteriaRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="navigateCaseByCriteriaResponse"/>
            </wsdl:output>
            <wsdl:fault name="CaseReferenceFault">
                <soap:fault use="literal" name="CaseReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseDataAccessFault">
                <soap:fault use="literal" name="CaseDataAccessFault"/>
            </wsdl:fault>
            <wsdl:fault name="CaseModelReferenceFault">
                <soap:fault use="literal" name="CaseModelReferenceFault"/>
            </wsdl:fault>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getDataViewCategories">
            <wsdl:documentation/>
            <soap:operation style="document" soapAction="getDataViewCategories"/>
            <wsdl:input>
                <soap:body use="literal" parts="getDataViewCategoriesRequest"/>
            </wsdl:input>
            <wsdl:output>
                <soap:body use="literal" parts="getDataViewCategoriesResponse"/>
            </wsdl:output>
            <wsdl:fault name="InternalServiceFault">
                <soap:fault use="literal" name="InternalServiceFault"/>
            </wsdl:fault>
            <wsdl:fault name="SecurityFault">
                <soap:fault use="literal" name="SecurityFault"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="BusinessDataServices_1.2.0">
        <wsdl:port name="BusinessDataServices.soap" binding="tns:BusinessDataServices.soap">
            <soap:address location="http://0.0.0.0:60180/amxbpm/BusinessDataServices"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>