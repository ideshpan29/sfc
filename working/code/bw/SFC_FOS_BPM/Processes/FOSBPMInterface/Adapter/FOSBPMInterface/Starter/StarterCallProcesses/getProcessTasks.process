<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://xmlns.tibco.com/bw/activity/xml/render/bytesEnvelope/2003/05" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType">
    <pd:name>Processes/FOSBPMInterface/Adapter/FOSBPMInterface/Starter/StarterProcesses/getProcessTasks.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startX>78</pd:startX>
    <pd:startY>98</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:value-of select="$RenderFetchProcessTasks/xmlString"/>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root" type="xsd:string"/>
    </pd:endType>
    <pd:endX>494</pd:endX>
    <pd:endY>99</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1511431318401</pd:targetNamespace>
    <pd:activity name="RenderFetchProcessTasks">
        <pd:type>com.tibco.plugin.xml.XMLRendererActivity</pd:type>
        <pd:resourceType>ae.activities.XMLRendererActivity</pd:resourceType>
        <pd:x>362</pd:x>
        <pd:y>99</pd:y>
        <config>
            <renderAsText>text</renderAsText>
            <validateInput>false</validateInput>
            <term>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Record" minOccurs="0" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="ACTIVITY_NAME" type="xsd:string"/>
                                        <xsd:element name="ACTIVITYCOUNT" type="xsd:string"/>
                                        <xsd:element name="TOTALWORKTIME" type="xsd:string"/>
                                        <xsd:element name="MAXWORKTIME" type="xsd:string"/>
                                        <xsd:element name="MINWORKTIME" type="xsd:string"/>
                                        <xsd:element name="AVGWORKTIME" type="xsd:string"/>
                                        <xsd:element name="COMPLETED" type="xsd:string"/>
                                        <xsd:element name="OPENED" type="xsd:string"/>
                                        <xsd:element name="CANCELLED" type="xsd:string"/>
                                        <xsd:element name="OFFERED" type="xsd:string"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </term>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:for-each select="$FetchProcessTasks/jdbcGeneralActivityOutput/unknownResultset/row">
                    <Record>
                        <ACTIVITY_NAME>
                            <xsl:value-of select="column[name=&quot;ACTIVITY_NAME&quot;]/value"/>
                        </ACTIVITY_NAME>
                        <ACTIVITYCOUNT>
                            <xsl:value-of select="column[name=&quot;ACTIVITYCOUNT&quot;]/value"/>
                        </ACTIVITYCOUNT>
                        <TOTALWORKTIME>
                            <xsl:value-of select="if(column[name=&quot;TOTALWORKTIME&quot;]/value!=&quot;&quot;) then column[name=&quot;TOTALWORKTIME&quot;]/value else &quot;NA&quot;"/>
                        </TOTALWORKTIME>
                        <MAXWORKTIME>
                            <xsl:value-of select="if(column[name=&quot;MAXWORKTIME&quot;]/value!=&quot;&quot;) then column[name=&quot;MAXWORKTIME&quot;]/value else &quot;NA&quot;"/>
                        </MAXWORKTIME>
                        <MINWORKTIME>
                            <xsl:value-of select="if(column[name=&quot;MINWORKTIME&quot;]/value!=&quot;&quot;) then column[name=&quot;MINWORKTIME&quot;]/value else &quot;NA&quot;"/>
                        </MINWORKTIME>
                        <AVGWORKTIME>
                            <xsl:value-of select="if(column[name=&quot;AVGWORKTIME&quot;]/value!=&quot;&quot;) then column[name=&quot;AVGWORKTIME&quot;]/value else &quot;NA&quot;"/>
                        </AVGWORKTIME>
                        <COMPLETED>
                            <xsl:value-of select="column[name=&quot;COMPLETED&quot;]/value"/>
                        </COMPLETED>
                        <OPENED>
                            <xsl:value-of select="column[name=&quot;OPENED&quot;]/value"/>
                        </OPENED>
                        <CANCELLED>
                            <xsl:value-of select="column[name=&quot;CANCELLED&quot;]/value"/>
                        </CANCELLED>
                        <OFFERED>
                            <xsl:value-of select="column[name=&quot;OFFERED&quot;]/value"/>
                        </OFFERED>
                    </Record>
                </xsl:for-each>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="FetchProcessTasks">
        <pd:type>com.tibco.plugin.jdbc.JDBCGeneralActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCGeneralActivity</pd:resourceType>
        <pd:x>209</pd:x>
        <pd:y>98</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <jdbcSharedConfig>/SharedResources/Connections/JDBC/JDBC Connection.sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <jdbcGeneralActivityInput>
                <statement>
                    <xsl:value-of select="concat(&quot;select activity_name,count(activity_name) ACTIVITYCOUNT, sum(WORK_TIME_DUR) TOTALWORKTIME,max(WORK_TIME_DUR) MAXWORKTIME,min(WORK_TIME_DUR) MINWORKTIME,FLOOR(AVG(WORK_TIME_DUR)) AVGWORKTIME, sum(CASE status when to_nchar('COMPLETED') then 1 else 0 end) COMPLETED , sum(CASE status when to_nchar('OPENED') then 1 else 0 end) OPENED, sum(CASE status when to_nchar('CANCELLED') then 1 else 0 end) Cancelled,sum(CASE status when to_nchar('OFFERED') then 1 else 0 end) Offered from  &quot;,$_globalVariables/ns1:GlobalVariables/BPM/ProcessAnalysis/BPMDatabasename,&quot;.EC_WI_STATUS GROUP by ACTIVITY_NAME&quot;)"/>
                </statement>
            </jdbcGeneralActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>RenderFetchProcessTasks</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>FetchProcessTasks</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>FetchProcessTasks</pd:from>
        <pd:to>RenderFetchProcessTasks</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>