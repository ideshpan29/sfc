<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions">
    <pd:name>Processes/FOSBPMInterface/Adapter/FOSBPMInterface/SubProcesses/ReportGeneration/Processes/generateExcelFeed.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startX>32</pd:startX>
    <pd:startY>57</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>837</pd:endX>
    <pd:endY>55</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Variable0>
            <xsd:element name="root" type="xsd:string"/>
        </Variable0>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1519190362395</pd:targetNamespace>
    <pd:activity name="JDBC Query">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>185</pd:x>
        <pd:y>55</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/SharedResources/Connections/JDBC/BPMDBConnection.sharedjdbc</jdbcSharedConfig>
            <statement>select siebelcircuitid,taskname,customername,projectmanager,taskdefaultsla,taskinitiationtime,taskcompletiontime,totaltimetaken,slastatus from BPMUSER72.BDS_2_DATAMODEL_PROCESSLOGGING </statement>
            <wizardData/>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>SIEBELCIRCUITID</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-9</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>NVARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>TASKNAME</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-9</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>NVARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>CUSTOMERNAME</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-9</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>NVARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>PROJECTMANAGER</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-9</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>NVARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>TASKDEFAULTSLA</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-9</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>NVARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>TASKINITIATIONTIME</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-9</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>NVARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>TASKCOMPLETIONTIME</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-9</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>NVARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>TOTALTIMETAKEN</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-9</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>NVARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>SLASTATUS</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-9</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>NVARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Java Code">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>676</pd:x>
        <pd:y>58</pd:y>
        <config>
            <javaArchive>/Processes/FOSBPMInterface/Adapter/FOSBPMInterface/SubProcesses/ReportGeneration/Shared Resources/AliasLibrary.aliaslib</javaArchive>
            <fullsource>package Processes.FOSBPMInterface.Adapter.FOSBPMInterface.SubProcesses.ReportGeneration.Processes.generateExcelFeed;
import java.util.*;
import java.io.*;
import  org.apache.poi.hssf.usermodel.HSSFSheet;
import  org.apache.poi.hssf.usermodel.HSSFWorkbook;
import  org.apache.poi.hssf.usermodel.HSSFRow;
import  org.apache.poi.hssf.usermodel.HSSFCell;
public class generateExcelFeedJavaCode{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String stringvalue = "";
	public String getstringvalue() {
		return stringvalue;
	}
	public void setstringvalue(String val) {
		stringvalue = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public void createHeaders(HSSFSheet sheet){
		HSSFRow rowhead = sheet.createRow((short)0);
        	rowhead.createCell(0).setCellValue("Siebel Circuit ID");
        	rowhead.createCell(1).setCellValue("Client Name");
        	rowhead.createCell(2).setCellValue("Total Time");
        	rowhead.createCell(3).setCellValue("Task Name");
	    	rowhead.createCell(4).setCellValue("Estimated SLA");
	    	rowhead.createCell(5).setCellValue("Actual Time");
	    	rowhead.createCell(6).setCellValue("SLA STATUS");
	}
	public generateExcelFeedJavaCode() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : String stringvalue
* Available Variables: DO NOT MODIFY *****/
	String filename = "D:/Excel/NewExcelFile.xls" ;
    HSSFWorkbook workbook = new HSSFWorkbook();
    HSSFSheet sheet = workbook.createSheet("All Tasks");  
	createHeaders(sheet);
	
	String[] s=getstringvalue().split("\n");
	for(int i=1;i&lt;=s.length;i++)
		{
			HSSFRow row = sheet.createRow((short)i);
			String[] s1=s[i].split(",");
			for(int j=0;j&lt;s1.length;j++)
				{
					row.createCell(j).setCellValue(s1[j]);
				}
		}

            FileOutputStream fileOut = new FileOutputStream(filename);
            workbook.write(fileOut);
            fileOut.close();
            System.out.println("Your excel file has been generated!");

}
}
</fullsource>
            <fileName>generateExcelFeedJavaCode</fileName>
            <packageName>Processes.FOSBPMInterface.Adapter.FOSBPMInterface.SubProcesses.ReportGeneration.Processes.generateExcelFeed</packageName>
            <inputData>
                <row>
                    <fieldName>stringvalue</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </inputData>
            <byteCode>
                <class>
                    <name>generateExcelFeedJavaCode</name>
                    <byteCode>yv66vgAAADQAdQkAHwA5CgA6ADsKADwAPQgAPgoAPwBACABBCABCCABDCABECABFCABGCgAgAEcIAEgIAEkHAEoKAA8ARwgASwoADwBMCgAfAE0KAB8ATggATwoAUABRCABSBwBTCgAYAFQKAA8AVQoAGABWCQBXAFgIAFkKAFoAWwcAXAcAXQEAC3N0cmluZ3ZhbHVlAQASTGphdmEvbGFuZy9TdHJpbmc7AQAOZ2V0c3RyaW5ndmFsdWUBABQoKUxqYXZhL2xhbmcvU3RyaW5nOwEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBAA5zZXRzdHJpbmd2YWx1ZQEAFShMamF2YS9sYW5nL1N0cmluZzspVgEADWNyZWF0ZUhlYWRlcnMBACwoTG9yZy9hcGFjaGUvcG9pL2hzc2YvdXNlcm1vZGVsL0hTU0ZTaGVldDspVgEABjxpbml0PgEAAygpVgEABmludm9rZQEADVN0YWNrTWFwVGFibGUHAFwHAF4HAEoHAF8HAGAHAGEBAApFeGNlcHRpb25zBwBiAQAKU291cmNlRmlsZQEAHmdlbmVyYXRlRXhjZWxGZWVkSmF2YUNvZGUuamF2YQwAIQAiBwBfDABjAGQHAGEMAGUAZgEAEVNpZWJlbCBDaXJjdWl0IElEBwBnDABoACgBAAtDbGllbnQgTmFtZQEAClRvdGFsIFRpbWUBAAlUYXNrIE5hbWUBAA1Fc3RpbWF0ZWQgU0xBAQALQWN0dWFsIFRpbWUBAApTTEEgU1RBVFVTDAArACwBAAABABlEOi9FeGNlbC9OZXdFeGNlbEZpbGUueGxzAQAqb3JnL2FwYWNoZS9wb2kvaHNzZi91c2VybW9kZWwvSFNTRldvcmtib29rAQAJQWxsIFRhc2tzDABpAGoMACkAKgwAIwAkAQABCgcAXgwAawBsAQABLAEAGGphdmEvaW8vRmlsZU91dHB1dFN0cmVhbQwAKwAoDABtAG4MAG8ALAcAcAwAcQByAQAjWW91ciBleGNlbCBmaWxlIGhhcyBiZWVuIGdlbmVyYXRlZCEHAHMMAHQAKAEAhVByb2Nlc3Nlcy9GT1NCUE1JbnRlcmZhY2UvQWRhcHRlci9GT1NCUE1JbnRlcmZhY2UvU3ViUHJvY2Vzc2VzL1JlcG9ydEdlbmVyYXRpb24vUHJvY2Vzc2VzL2dlbmVyYXRlRXhjZWxGZWVkL2dlbmVyYXRlRXhjZWxGZWVkSmF2YUNvZGUBABBqYXZhL2xhbmcvT2JqZWN0AQAQamF2YS9sYW5nL1N0cmluZwEAJ29yZy9hcGFjaGUvcG9pL2hzc2YvdXNlcm1vZGVsL0hTU0ZTaGVldAEAE1tMamF2YS9sYW5nL1N0cmluZzsBACVvcmcvYXBhY2hlL3BvaS9oc3NmL3VzZXJtb2RlbC9IU1NGUm93AQATamF2YS9sYW5nL0V4Y2VwdGlvbgEACWNyZWF0ZVJvdwEAKihJKUxvcmcvYXBhY2hlL3BvaS9oc3NmL3VzZXJtb2RlbC9IU1NGUm93OwEACmNyZWF0ZUNlbGwBACsoSSlMb3JnL2FwYWNoZS9wb2kvaHNzZi91c2VybW9kZWwvSFNTRkNlbGw7AQAmb3JnL2FwYWNoZS9wb2kvaHNzZi91c2VybW9kZWwvSFNTRkNlbGwBAAxzZXRDZWxsVmFsdWUBAAtjcmVhdGVTaGVldAEAPShMamF2YS9sYW5nL1N0cmluZzspTG9yZy9hcGFjaGUvcG9pL2hzc2YvdXNlcm1vZGVsL0hTU0ZTaGVldDsBAAVzcGxpdAEAJyhMamF2YS9sYW5nL1N0cmluZzspW0xqYXZhL2xhbmcvU3RyaW5nOwEABXdyaXRlAQAZKExqYXZhL2lvL091dHB1dFN0cmVhbTspVgEABWNsb3NlAQAQamF2YS9sYW5nL1N5c3RlbQEAA291dAEAFUxqYXZhL2lvL1ByaW50U3RyZWFtOwEAE2phdmEvaW8vUHJpbnRTdHJlYW0BAAdwcmludGxuACEAHwAgAAAAAQAEACEAIgAAAAUAAQAjACQAAQAlAAAAHQABAAEAAAAFKrQAAbAAAAABACYAAAAGAAEAAAAMAAEAJwAoAAEAJQAAACIAAgACAAAABiortQABsQAAAAEAJgAAAAoAAgAAAA8ABQAQAAEAKQAqAAEAJQAAAIYAAgADAAAATisDtgACTSwDtgADEgS2AAUsBLYAAxIGtgAFLAW2AAMSB7YABSwGtgADEgi2AAUsB7YAAxIJtgAFLAi2AAMSCrYABSwQBrYAAxILtgAFsQAAAAEAJgAAACYACQAAABMABgAUABAAFQAaABYAJAAXAC4AGAA4ABkAQgAaAE0AGwABACsALAABACUAAAArAAIAAQAAAAsqtwAMKhINtQABsQAAAAEAJgAAAA4AAwAAABwABAAKAAoAHQABAC0ALAACACUAAAENAAMACQAAAIYSDky7AA9ZtwAQTSwSEbYAEk4qLbYAEyq2ABQSFbYAFjoEBDYFFQUZBL6jAD4tFQWTtgACOgYZBBUFMhIXtgAWOgcDNggVCBkHvqIAGBkGFQi2AAMZBxUIMrYABYQIAaf/5oQFAaf/wLsAGFkrtwAZOgUsGQW2ABoZBbYAG7IAHBIdtgAesQAAAAIAJgAAAEYAEQAAACIAAwAjAAsAJAASACUAFwAnACIAKAAtACoANgArAEIALABNAC4AXAAsAGIAKABoADIAcgAzAHgANAB9ADUAhQA3AC4AAAApAAT/ACUABgcALwcAMAcAMQcAMgcAMwEAAP4AHwcANAcAMwH4ABz6AAUANQAAAAQAAQA2AAEANwAAAAIAOA==</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <stringvalue>
                    <xsl:value-of select="tib:trim($Variable0/root)"/>
                </stringvalue>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>233</pd:x>
        <pd:y>0</pd:y>
        <pd:width>252</pd:width>
        <pd:height>150</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$JDBC-Query/resultSet/Record</pd:over>
            <pd:iterationElementSlot>iter</pd:iterationElementSlot>
            <pd:indexSlot>index</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Assign</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Assign</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Assign">
            <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
            <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
            <pd:x>366</pd:x>
            <pd:y>74</pd:y>
            <config>
                <variableName>Variable0</variableName>
            </config>
            <pd:inputBindings>
                <root>
                    <xsl:value-of select="concat($Variable0/root,$iter/Record/SIEBELCIRCUITID,',', $iter/Record/CUSTOMERNAME,',',$iter/Record/TOTALTIMETAKEN,',',$iter/Record/TASKNAME,',',$iter/Record/TASKDEFAULTSLA,',',$iter/Record/TASKCOMPLETIONTIME,',',$iter/Record/SLASTATUS,&quot;&#xA;&quot;)"/>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Initialize">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>108</pd:x>
        <pd:y>68</pd:y>
        <config>
            <variableName>Variable0</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:value-of select="&quot;&quot;"/>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Write File">
        <pd:type>com.tibco.plugin.file.FileWriteActivity</pd:type>
        <pd:resourceType>ae.activities.FileWriteActivity</pd:resourceType>
        <pd:x>604</pd:x>
        <pd:y>143</pd:y>
        <config>
            <encoding>text</encoding>
            <compressFile>None</compressFile>
            <createMissingDirectories>true</createMissingDirectories>
        </config>
        <pd:inputBindings>
            <ns:WriteActivityInputTextClass>
                <fileName>
                    <xsl:value-of select="&quot;C:\Users\rbapat\Desktop\XYZ.txt&quot;"/>
                </fileName>
                <textContent>
                    <xsl:value-of select="$Variable0/root"/>
                </textContent>
            </ns:WriteActivityInputTextClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Java-Code-1">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>740</pd:x>
        <pd:y>142</pd:y>
        <config>
            <javaArchive>/Processes/FOSBPMInterface/Adapter/FOSBPMInterface/SubProcesses/ReportGeneration/Shared Resources/AliasLibrary.aliaslib</javaArchive>
            <fileName>generateExcelFeedJavaCode1</fileName>
            <packageName>Processes.FOSBPMInterface.Adapter.FOSBPMInterface.SubProcesses.ReportGeneration.Processes.generateExcelFeed</packageName>
            <fullsource>package Processes.FOSBPMInterface.Adapter.FOSBPMInterface.SubProcesses.ReportGeneration.Processes.generateExcelFeed;
import java.util.*;
import java.io.*;
import  org.apache.poi.hssf.usermodel.HSSFSheet;
import  org.apache.poi.hssf.usermodel.HSSFWorkbook;
import  org.apache.poi.hssf.usermodel.HSSFRow;
import  org.apache.poi.hssf.usermodel.HSSFCell;
public class generateExcelFeedJavaCode1{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String stringvalue = "";
	public String getstringvalue() {
		return stringvalue;
	}
	public void setstringvalue(String val) {
		stringvalue = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
		public void createHeaders(HSSFSheet sheet){
		HSSFRow rowhead = sheet.createRow((short)0);
        	rowhead.createCell(0).setCellValue("Siebel Circuit ID");
        	rowhead.createCell(1).setCellValue("Client Name");
        	rowhead.createCell(2).setCellValue("Total Time");
        	rowhead.createCell(3).setCellValue("Task Name");
	    	rowhead.createCell(4).setCellValue("Estimated SLA");
	    	rowhead.createCell(5).setCellValue("Actual Time");
	    	rowhead.createCell(6).setCellValue("SLA STATUS");
	}
	public generateExcelFeedJavaCode1() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : String stringvalue
* Available Variables: DO NOT MODIFY *****/
String filename = "D:/Excel/NewExcelFile.xls" ;
    HSSFWorkbook workbook = new HSSFWorkbook();
    HSSFSheet sheet = workbook.createSheet("All Tasks");  
	createHeaders(sheet);
	
	String[] s=getstringvalue().split("\n");
	for(int i=1;i&lt;=s.length;i++)
		{
			HSSFRow row = sheet.createRow((short)i);
			String[] s1=s[i-1].split(",");
			for(int j=0;j&lt;s1.length;j++)
				{
					row.createCell(j).setCellValue(s1[j]);
				}
		}

            FileOutputStream fileOut = new FileOutputStream(filename);
            workbook.write(fileOut);
            fileOut.close();
            System.out.println("Your excel file has been generated!");
}
}
</fullsource>
            <inputData>
                <row>
                    <fieldName>stringvalue</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </inputData>
            <byteCode>
                <class>
                    <name>generateExcelFeedJavaCode1</name>
                    <byteCode>yv66vgAAADQAdQkAHwA5CgA6ADsKADwAPQgAPgoAPwBACABBCABCCABDCABECABFCABGCgAgAEcIAEgIAEkHAEoKAA8ARwgASwoADwBMCgAfAE0KAB8ATggATwoAUABRCABSBwBTCgAYAFQKAA8AVQoAGABWCQBXAFgIAFkKAFoAWwcAXAcAXQEAC3N0cmluZ3ZhbHVlAQASTGphdmEvbGFuZy9TdHJpbmc7AQAOZ2V0c3RyaW5ndmFsdWUBABQoKUxqYXZhL2xhbmcvU3RyaW5nOwEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBAA5zZXRzdHJpbmd2YWx1ZQEAFShMamF2YS9sYW5nL1N0cmluZzspVgEADWNyZWF0ZUhlYWRlcnMBACwoTG9yZy9hcGFjaGUvcG9pL2hzc2YvdXNlcm1vZGVsL0hTU0ZTaGVldDspVgEABjxpbml0PgEAAygpVgEABmludm9rZQEADVN0YWNrTWFwVGFibGUHAFwHAF4HAEoHAF8HAGAHAGEBAApFeGNlcHRpb25zBwBiAQAKU291cmNlRmlsZQEAH2dlbmVyYXRlRXhjZWxGZWVkSmF2YUNvZGUxLmphdmEMACEAIgcAXwwAYwBkBwBhDABlAGYBABFTaWViZWwgQ2lyY3VpdCBJRAcAZwwAaAAoAQALQ2xpZW50IE5hbWUBAApUb3RhbCBUaW1lAQAJVGFzayBOYW1lAQANRXN0aW1hdGVkIFNMQQEAC0FjdHVhbCBUaW1lAQAKU0xBIFNUQVRVUwwAKwAsAQAAAQAZRDovRXhjZWwvTmV3RXhjZWxGaWxlLnhscwEAKm9yZy9hcGFjaGUvcG9pL2hzc2YvdXNlcm1vZGVsL0hTU0ZXb3JrYm9vawEACUFsbCBUYXNrcwwAaQBqDAApACoMACMAJAEAAQoHAF4MAGsAbAEAASwBABhqYXZhL2lvL0ZpbGVPdXRwdXRTdHJlYW0MACsAKAwAbQBuDABvACwHAHAMAHEAcgEAI1lvdXIgZXhjZWwgZmlsZSBoYXMgYmVlbiBnZW5lcmF0ZWQhBwBzDAB0ACgBAIZQcm9jZXNzZXMvRk9TQlBNSW50ZXJmYWNlL0FkYXB0ZXIvRk9TQlBNSW50ZXJmYWNlL1N1YlByb2Nlc3Nlcy9SZXBvcnRHZW5lcmF0aW9uL1Byb2Nlc3Nlcy9nZW5lcmF0ZUV4Y2VsRmVlZC9nZW5lcmF0ZUV4Y2VsRmVlZEphdmFDb2RlMQEAEGphdmEvbGFuZy9PYmplY3QBABBqYXZhL2xhbmcvU3RyaW5nAQAnb3JnL2FwYWNoZS9wb2kvaHNzZi91c2VybW9kZWwvSFNTRlNoZWV0AQATW0xqYXZhL2xhbmcvU3RyaW5nOwEAJW9yZy9hcGFjaGUvcG9pL2hzc2YvdXNlcm1vZGVsL0hTU0ZSb3cBABNqYXZhL2xhbmcvRXhjZXB0aW9uAQAJY3JlYXRlUm93AQAqKEkpTG9yZy9hcGFjaGUvcG9pL2hzc2YvdXNlcm1vZGVsL0hTU0ZSb3c7AQAKY3JlYXRlQ2VsbAEAKyhJKUxvcmcvYXBhY2hlL3BvaS9oc3NmL3VzZXJtb2RlbC9IU1NGQ2VsbDsBACZvcmcvYXBhY2hlL3BvaS9oc3NmL3VzZXJtb2RlbC9IU1NGQ2VsbAEADHNldENlbGxWYWx1ZQEAC2NyZWF0ZVNoZWV0AQA9KExqYXZhL2xhbmcvU3RyaW5nOylMb3JnL2FwYWNoZS9wb2kvaHNzZi91c2VybW9kZWwvSFNTRlNoZWV0OwEABXNwbGl0AQAnKExqYXZhL2xhbmcvU3RyaW5nOylbTGphdmEvbGFuZy9TdHJpbmc7AQAFd3JpdGUBABkoTGphdmEvaW8vT3V0cHV0U3RyZWFtOylWAQAFY2xvc2UBABBqYXZhL2xhbmcvU3lzdGVtAQADb3V0AQAVTGphdmEvaW8vUHJpbnRTdHJlYW07AQATamF2YS9pby9QcmludFN0cmVhbQEAB3ByaW50bG4AIQAfACAAAAABAAQAIQAiAAAABQABACMAJAABACUAAAAdAAEAAQAAAAUqtAABsAAAAAEAJgAAAAYAAQAAAAwAAQAnACgAAQAlAAAAIgACAAIAAAAGKiu1AAGxAAAAAQAmAAAACgACAAAADwAFABAAAQApACoAAQAlAAAAhgACAAMAAABOKwO2AAJNLAO2AAMSBLYABSwEtgADEga2AAUsBbYAAxIHtgAFLAa2AAMSCLYABSwHtgADEgm2AAUsCLYAAxIKtgAFLBAGtgADEgu2AAWxAAAAAQAmAAAAJgAJAAAAEwAGABQAEAAVABoAFgAkABcALgAYADgAGQBCABoATQAbAAEAKwAsAAEAJQAAACsAAgABAAAACyq3AAwqEg21AAGxAAAAAQAmAAAADgADAAAAHAAEAAoACgAdAAEALQAsAAIAJQAAAQ8AAwAJAAAAiBIOTLsAD1m3ABBNLBIRtgASTiottgATKrYAFBIVtgAWOgQENgUVBRkEvqMAQC0VBZO2AAI6BhkEFQUEZDISF7YAFjoHAzYIFQgZB76iABgZBhUItgADGQcVCDK2AAWECAGn/+aEBQGn/767ABhZK7cAGToFLBkFtgAaGQW2ABuyABwSHbYAHrEAAAACACYAAABGABEAAAAiAAMAIwALACQAEgAlABcAJwAiACgALQAqADYAKwBEACwATwAuAF4ALABkACgAagAyAHQAMwB6ADQAfwA1AIcANgAuAAAAKQAE/wAlAAYHAC8HADAHADEHADIHADMBAAD+ACEHADQHADMB+AAc+gAFADUAAAAEAAEANgABADcAAAACADg=</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <stringvalue>
                    <xsl:value-of select="tib:trim($Variable0/root)"/>
                </stringvalue>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Initialize</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Java Code</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JDBC Query</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Java Code</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>1=2</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Initialize</pd:from>
        <pd:to>JDBC Query</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Write File</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Write File</pd:from>
        <pd:to>Java-Code-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Java-Code-1</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>